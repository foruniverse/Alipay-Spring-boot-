<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.springboot.helloworld.mapper.TradeMapper">
  <resultMap id="BaseResultMap" type="com.demo.springboot.helloworld.common.domain.Trade">
    <id column="out_trade_no" jdbcType="INTEGER" property="outTradeNo" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="hotel_id" jdbcType="INTEGER" property="hotelId" />
    <result column="trade_amount" jdbcType="BIGINT" property="tradeAmount" />
    <result column="trade_comment" jdbcType="VARCHAR" property="tradeComment" />
    <result column="trade_user_id" jdbcType="INTEGER" property="tradeUserId" />
    <result column="trade_create_time" jdbcType="TIMESTAMP" property="tradeCreateTime" />
    <result column="trade_title" jdbcType="VARCHAR" property="tradeTitle" />
    <result column="trade_state" jdbcType="INTEGER" property="tradeState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    out_trade_no, trade_no, hotel_id, trade_amount, trade_comment, trade_user_id, trade_create_time, 
    trade_title, trade_state
  </sql>
  <select id="selectByExample" parameterType="com.demo.springboot.helloworld.common.domain.TradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel_trade
    where out_trade_no = #{outTradeNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hotel_trade
    where out_trade_no = #{outTradeNo,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.springboot.helloworld.common.domain.TradeExample">
    delete from hotel_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.springboot.helloworld.common.domain.Trade">
    insert into hotel_trade (out_trade_no, trade_no, hotel_id, 
      trade_amount, trade_comment, trade_user_id, 
      trade_create_time, trade_title, trade_state
      )
    values (#{outTradeNo,jdbcType=INTEGER}, #{tradeNo,jdbcType=VARCHAR}, #{hotelId,jdbcType=INTEGER}, 
      #{tradeAmount,jdbcType=BIGINT}, #{tradeComment,jdbcType=VARCHAR}, #{tradeUserId,jdbcType=INTEGER}, 
      #{tradeCreateTime,jdbcType=TIMESTAMP}, #{tradeTitle,jdbcType=VARCHAR}, #{tradeState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.springboot.helloworld.common.domain.Trade">
    insert into hotel_trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="hotelId != null">
        hotel_id,
      </if>
      <if test="tradeAmount != null">
        trade_amount,
      </if>
      <if test="tradeComment != null">
        trade_comment,
      </if>
      <if test="tradeUserId != null">
        trade_user_id,
      </if>
      <if test="tradeCreateTime != null">
        trade_create_time,
      </if>
      <if test="tradeTitle != null">
        trade_title,
      </if>
      <if test="tradeState != null">
        trade_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="hotelId != null">
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="tradeAmount != null">
        #{tradeAmount,jdbcType=BIGINT},
      </if>
      <if test="tradeComment != null">
        #{tradeComment,jdbcType=VARCHAR},
      </if>
      <if test="tradeUserId != null">
        #{tradeUserId,jdbcType=INTEGER},
      </if>
      <if test="tradeCreateTime != null">
        #{tradeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeTitle != null">
        #{tradeTitle,jdbcType=VARCHAR},
      </if>
      <if test="tradeState != null">
        #{tradeState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.springboot.helloworld.common.domain.TradeExample" resultType="java.lang.Long">
    select count(*) from hotel_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel_trade
    <set>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.hotelId != null">
        hotel_id = #{record.hotelId,jdbcType=INTEGER},
      </if>
      <if test="record.tradeAmount != null">
        trade_amount = #{record.tradeAmount,jdbcType=BIGINT},
      </if>
      <if test="record.tradeComment != null">
        trade_comment = #{record.tradeComment,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeUserId != null">
        trade_user_id = #{record.tradeUserId,jdbcType=INTEGER},
      </if>
      <if test="record.tradeCreateTime != null">
        trade_create_time = #{record.tradeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tradeTitle != null">
        trade_title = #{record.tradeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeState != null">
        trade_state = #{record.tradeState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel_trade
    set out_trade_no = #{record.outTradeNo,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      hotel_id = #{record.hotelId,jdbcType=INTEGER},
      trade_amount = #{record.tradeAmount,jdbcType=BIGINT},
      trade_comment = #{record.tradeComment,jdbcType=VARCHAR},
      trade_user_id = #{record.tradeUserId,jdbcType=INTEGER},
      trade_create_time = #{record.tradeCreateTime,jdbcType=TIMESTAMP},
      trade_title = #{record.tradeTitle,jdbcType=VARCHAR},
      trade_state = #{record.tradeState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.springboot.helloworld.common.domain.Trade">
    update hotel_trade
    <set>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="hotelId != null">
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="tradeAmount != null">
        trade_amount = #{tradeAmount,jdbcType=BIGINT},
      </if>
      <if test="tradeComment != null">
        trade_comment = #{tradeComment,jdbcType=VARCHAR},
      </if>
      <if test="tradeUserId != null">
        trade_user_id = #{tradeUserId,jdbcType=INTEGER},
      </if>
      <if test="tradeCreateTime != null">
        trade_create_time = #{tradeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeTitle != null">
        trade_title = #{tradeTitle,jdbcType=VARCHAR},
      </if>
      <if test="tradeState != null">
        trade_state = #{tradeState,jdbcType=INTEGER},
      </if>
    </set>
    where out_trade_no = #{outTradeNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.springboot.helloworld.common.domain.Trade">
    update hotel_trade
    set trade_no = #{tradeNo,jdbcType=VARCHAR},
      hotel_id = #{hotelId,jdbcType=INTEGER},
      trade_amount = #{tradeAmount,jdbcType=BIGINT},
      trade_comment = #{tradeComment,jdbcType=VARCHAR},
      trade_user_id = #{tradeUserId,jdbcType=INTEGER},
      trade_create_time = #{tradeCreateTime,jdbcType=TIMESTAMP},
      trade_title = #{tradeTitle,jdbcType=VARCHAR},
      trade_state = #{tradeState,jdbcType=INTEGER}
    where out_trade_no = #{outTradeNo,jdbcType=INTEGER}
  </update>
<!--  &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-->
  <insert id="insertInitial" parameterType="com.demo.springboot.helloworld.common.domain.Trade">
    insert into hotel_trade (hotel_id,
      trade_amount, trade_comment, trade_user_id,
      trade_create_time, trade_title, trade_state
      )
    values (#{hotelId,jdbcType=INTEGER},
      #{tradeAmount,jdbcType=BIGINT}, #{tradeComment,jdbcType=VARCHAR}, #{tradeUserId,jdbcType=INTEGER},
      #{tradeCreateTime,jdbcType=TIMESTAMP}, #{tradeTitle,jdbcType=VARCHAR}, #{tradeState,jdbcType=INTEGER}
      )
      <selectKey keyProperty="outTradeNo" order="AFTER" resultType="java.lang.Integer">
        select LAST_INSERT_ID();
      </selectKey>
  </insert>
</mapper>